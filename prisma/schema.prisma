generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(cuid())
  name           String?
  email          String        @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  accounts       Account[]
  sessions       Session[]
  startupIdeas   StartupIdea[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StartupIdea {
  id                        String   @id @default(cuid())
  title                     String
  problem                   String
  solution                  String
  audience                  String
  businessModel             String
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  userId                    String
  businessModelIdeas        Json
  marketPotentialScore      Int
  mvpSuggestions            Json
  overallScore              Int
  swotAnalysis              Json
  technicalFeasibilityScore Int
  risks                     Json
  user                      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
